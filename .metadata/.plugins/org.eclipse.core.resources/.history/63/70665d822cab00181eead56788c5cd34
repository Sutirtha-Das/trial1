package com.BinaryTrees;

public class LearnArray {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		/*int[] arr= new int[]{1,2,3,4,5,6};
		printArray(arr);
		leftRotate(arr, 5, 1);*/
		int[] newArr =  new int[]{2,5,1,3,4};
		minimumBribe(newArr);
	}
	public static void printArray(int arr[]){
		for(int i=0;i<arr.length;i++){
			System.out.print(arr[i]);
		}
		System.out.println(" ");
	}
	public static void leftRotate(int arr[],int d, int n){
		for(int j=0;j<d;j++){
			leftRotateByN(arr, n);
			printArray(arr);
		}
	}
	public static void leftRotateByN(int arr[],int n){
		int i;
		int temp = arr[0];
		for(i=0;i<arr.length-1;i++){
			arr[i] = arr[i+1];
		}
		arr[i]=temp;
	}
	
	public static void minimumBribe(int arr[]){
		int bribeCount = 0;
			for(int i=0;i<arr.length;i++){
				if(arr[i] > i+1){
					int diff = arr[i]-(i+1);
					if(diff > 2){
						System.out.println("Too Chaotic");
						return;
					}
					else{
						bribeCount += diff;
					}
				}
			}
		System.out.println(bribeCount);
	}
}
