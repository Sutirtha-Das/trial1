/**
 * 
 */
package com.rabobank.com.rabobank.processor;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.rabobank.com.rabobank.config.RabobankConfig;
import com.rabobank.com.rabobank.model.InvalidRecords;
import com.rabobank.com.rabobank.model.Records;
import com.rabobank.com.rabobank.service.RaboBankValidationService;

/**
 * @author Sutirtha
 *
 */
@RestController
@RequestMapping("processReport")
public class RaboBankReportProcessor {
	
	@Autowired
	RabobankConfig config;
	
	@Autowired
	private RaboBankValidationService validationService;
	
	@RequestMapping("/validateRecords")
	public List<InvalidRecords> validateTransactionRecords() throws JAXBException{
		List<InvalidRecords> recordList = new ArrayList<InvalidRecords>();
		Records recordsFromXml  = readFromXML();
		validationService.validateTransactionRecords(recordsFromXml);
		return recordList;
	}
	
	private Records readFromXML() throws JAXBException{
		File xmlFile = new File(config.getReadXMLSourcefilePath());
		JAXBContext jaxbContext = JAXBContext.newInstance(Records.class);
		Unmarshaller jaxbUnmarshall = jaxbContext.createUnmarshaller();
		Records records = (Records) jaxbUnmarshall.unmarshal(xmlFile);
		System.out.println(records.toString());
		return records;
	}
	
}
